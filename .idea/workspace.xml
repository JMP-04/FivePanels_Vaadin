<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="b52be292-f434-40a6-8c11-3625499432c5" name="Changes" comment="feat: Implement dynamic contact list with friend requests and chat functionality&#10;&#10;- Add User and UserProfile classes with necessary fields and methods&#10;- Update UserRepository to handle user operations and seed test users&#10;- Implement login functionality with Admin and Regular user roles&#10;- Add FriendRequestView to handle incoming and outgoing friend requests&#10;- Modify ContactView to dynamically list friends and all users for sending friend requests&#10;- Create MessengerView to display chats and messages, allowing users to send messages&#10;- Add logic to automatically create direct chats upon accepting friend requests&#10;- Ensure that users can remove friends, with the relationship being updated dynamically&#10;- Add logout button with confirmation dialog in MainLayout&#10;- Prevent duplicate user seeding and handle initialization in ApplicationInitializer&#10;- Add validation methods in User and update the logic for handling friend requests and chats&#10;- Fix issues with message display and ensure messages can be sent and displayed correctly in chats&#10;- Refactor Chat and Message classes to extend BaseEntity and handle message removal by UUID&#10;- Add necessary components and listeners to support chat functionality in MessengerView">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/fivepanels/my-app/src/main/java/com/fivepanels/application/security/CustomRequestCache.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/fivepanels/my-app/src/main/java/com/fivepanels/application/security/SecurityConfig.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/fivepanels/my-app/src/main/java/com/fivepanels/application/security/SecurityService.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/fivepanels/my-app/src/main/java/com/fivepanels/application/security/roles/Roles.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/fivepanels/my-app/src/main/java/com/fivepanels/application/views/about/AboutView.java" beforeDir="false" afterPath="$PROJECT_DIR$/fivepanels/my-app/src/main/java/com/fivepanels/application/views/about/AboutView.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/fivepanels/my-app/src/main/java/com/fivepanels/application/views/medicalcase/CreateNewMedicalCaseView.java" beforeDir="false" afterPath="$PROJECT_DIR$/fivepanels/my-app/src/main/java/com/fivepanels/application/views/medicalcase/CreateNewMedicalCaseView.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/fivepanels/my-app/src/main/java/com/fivepanels/application/views/medicalcase/MedicalCaseView.java" beforeDir="false" afterPath="$PROJECT_DIR$/fivepanels/my-app/src/main/java/com/fivepanels/application/views/medicalcase/MedicalCaseView.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/fivepanels/my-app/src/main/java/com/fivepanels/application/views/medicalcase/MyMedicalCaseView.java" beforeDir="false" afterPath="$PROJECT_DIR$/fivepanels/my-app/src/main/java/com/fivepanels/application/views/medicalcase/MyMedicalCaseView.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/fivepanels/my-app/src/main/java/com/fivepanels/application/views/user/ProfileView.java" beforeDir="false" afterPath="$PROJECT_DIR$/fivepanels/my-app/src/main/java/com/fivepanels/application/views/user/ProfileView.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/fivepanels/my-app/src/main/java/com/fivepanels/application/views/user/RegisterView.java" beforeDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
    <option name="UPDATE_TYPE" value="REBASE" />
  </component>
  <component name="GitHubPullRequestSearchHistory"><![CDATA[{
  "lastFilter": {
    "state": "OPEN",
    "assignee": "JMP-04"
  }
}]]></component>
  <component name="GithubPullRequestsUISettings">
    <option name="selectedUrlAndAccountId">
      <UrlAndAccount>
        <option name="accountId" value="93f2576b-cab9-4eab-a88e-a9e1f22e3766" />
        <option name="url" value="https://github.com/JMP-04/FivePanels_Vaadin" />
      </UrlAndAccount>
    </option>
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="MavenImportPreferences">
    <option name="generalSettings">
      <MavenGeneralSettings>
        <option name="mavenHome" value="Use Maven wrapper" />
      </MavenGeneralSettings>
    </option>
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 8
}</component>
  <component name="ProjectId" id="2hurGxTVqkFso8fyM2uZpBUkCZQ" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RequestMappingsPanelOrder0&quot;: &quot;0&quot;,
    &quot;RequestMappingsPanelOrder1&quot;: &quot;1&quot;,
    &quot;RequestMappingsPanelWidth0&quot;: &quot;75&quot;,
    &quot;RequestMappingsPanelWidth1&quot;: &quot;75&quot;,
    &quot;Spring Boot.Application.executor&quot;: &quot;Run&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/Users/janma/Desktop/fp&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RunManager">
    <configuration name="Application" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <option name="FRAME_DEACTIVATION_UPDATE_POLICY" value="UpdateClassesAndResources" />
      <module name="fivepanels" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.fivepanels.application.Application" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-jdk-9f38398b9061-18abd8497189-intellij.indexing.shared.core-IU-241.14494.240" />
        <option value="bundled-js-predefined-1d06a55b98c1-74d2a5396914-JavaScript-IU-241.14494.240" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="b52be292-f434-40a6-8c11-3625499432c5" name="Changes" comment="" />
      <created>1718454711748</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1718454711748</updated>
      <workItem from="1718454712605" duration="150000" />
      <workItem from="1718454865943" duration="36000" />
      <workItem from="1718456254723" duration="353000" />
      <workItem from="1718456631954" duration="45000" />
      <workItem from="1718456681339" duration="7133000" />
      <workItem from="1718480913528" duration="6585000" />
      <workItem from="1718540577928" duration="6211000" />
      <workItem from="1718571322609" duration="135000" />
      <workItem from="1718640090430" duration="18000" />
      <workItem from="1718647482148" duration="19000" />
      <workItem from="1718745298933" duration="14917000" />
    </task>
    <task id="LOCAL-00001" summary="Major changes in project, creating medical cases now possible.">
      <option name="closed" value="true" />
      <created>1718495879694</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1718495879694</updated>
    </task>
    <task id="LOCAL-00002" summary="Some changes done to project, lot of bug fixing todos.">
      <option name="closed" value="true" />
      <created>1718548697357</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1718548697357</updated>
    </task>
    <task id="LOCAL-00003" summary="feat: Implement dynamic contact list with friend requests and chat functionality&#10;&#10;- Add User and UserProfile classes with necessary fields and methods&#10;- Update UserRepository to handle user operations and seed test users&#10;- Implement login functionality with Admin and Regular user roles&#10;- Add FriendRequestView to handle incoming and outgoing friend requests&#10;- Modify ContactView to dynamically list friends and all users for sending friend requests&#10;- Create MessengerView to display chats and messages, allowing users to send messages&#10;- Add logic to automatically create direct chats upon accepting friend requests&#10;- Ensure that users can remove friends, with the relationship being updated dynamically&#10;- Add logout button with confirmation dialog in MainLayout&#10;- Prevent duplicate user seeding and handle initialization in ApplicationInitializer&#10;- Add validation methods in User and update the logic for handling friend requests and chats&#10;- Fix issues with message display and ensure messages can be sent and displayed correctly in chats&#10;- Refactor Chat and Message classes to extend BaseEntity and handle message removal by UUID&#10;- Add necessary components and listeners to support chat functionality in MessengerView">
      <option name="closed" value="true" />
      <created>1718761861870</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1718761861870</updated>
    </task>
    <option name="localTasksCounter" value="4" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Major changes in project, creating medical cases now possible." />
    <MESSAGE value="Some changes done to project, lot of bug fixing todos." />
    <MESSAGE value="feat: Implement dynamic contact list with friend requests and chat functionality&#10;&#10;- Add User and UserProfile classes with necessary fields and methods&#10;- Update UserRepository to handle user operations and seed test users&#10;- Implement login functionality with Admin and Regular user roles&#10;- Add FriendRequestView to handle incoming and outgoing friend requests&#10;- Modify ContactView to dynamically list friends and all users for sending friend requests&#10;- Create MessengerView to display chats and messages, allowing users to send messages&#10;- Add logic to automatically create direct chats upon accepting friend requests&#10;- Ensure that users can remove friends, with the relationship being updated dynamically&#10;- Add logout button with confirmation dialog in MainLayout&#10;- Prevent duplicate user seeding and handle initialization in ApplicationInitializer&#10;- Add validation methods in User and update the logic for handling friend requests and chats&#10;- Fix issues with message display and ensure messages can be sent and displayed correctly in chats&#10;- Refactor Chat and Message classes to extend BaseEntity and handle message removal by UUID&#10;- Add necessary components and listeners to support chat functionality in MessengerView" />
    <option name="LAST_COMMIT_MESSAGE" value="feat: Implement dynamic contact list with friend requests and chat functionality&#10;&#10;- Add User and UserProfile classes with necessary fields and methods&#10;- Update UserRepository to handle user operations and seed test users&#10;- Implement login functionality with Admin and Regular user roles&#10;- Add FriendRequestView to handle incoming and outgoing friend requests&#10;- Modify ContactView to dynamically list friends and all users for sending friend requests&#10;- Create MessengerView to display chats and messages, allowing users to send messages&#10;- Add logic to automatically create direct chats upon accepting friend requests&#10;- Ensure that users can remove friends, with the relationship being updated dynamically&#10;- Add logout button with confirmation dialog in MainLayout&#10;- Prevent duplicate user seeding and handle initialization in ApplicationInitializer&#10;- Add validation methods in User and update the logic for handling friend requests and chats&#10;- Fix issues with message display and ensure messages can be sent and displayed correctly in chats&#10;- Refactor Chat and Message classes to extend BaseEntity and handle message removal by UUID&#10;- Add necessary components and listeners to support chat functionality in MessengerView" />
  </component>
</project>